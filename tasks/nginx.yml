---
- name: set vars
  set_fact:
    docker_image: '{{ role_promtail_nginx_docker_image }}'
    docker_container: '{{ role_promtail_docker_container }}-nginx'
    docker_volume: '{{ role_promtail_docker_volume }}-nginx'
    docker_network: '{{ role_promtail_docker_network }}'

- name: Ensure image is pulled
  community.docker.docker_image:
    name: "{{ docker_image }}"
    source: pull
    force_source: yes
  register: pulled

- name: Remove container
  community.docker.docker_container:
    name: "{{ docker_container }}"
    state: absent
  when: pulled.changed

- name: Get infos on container
  community.docker.docker_container_info:
    name: "{{ docker_container }}"
  register: result

- name: Create container
  community.docker.docker_container:
    image: '{{ docker_image }}'
    name: '{{ docker_container }}'
    networks:
     - name: '{{ docker_network }}'
    env:
      FORWARD_HOST: '{{ docker_container }}'
      FORWARD_PORT: '9080'
      HTPASSWD: '{{ role_promtail_nginx_htpasswd }}'
    restart_policy: unless-stopped
    state: started
  when:
    pulled.changed
    or
    result.exists == false
